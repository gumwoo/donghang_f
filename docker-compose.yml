version: '3.8'

services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:15-alpine
    container_name: donghang-postgres
    environment:
      POSTGRES_DB: donghang_db
      POSTGRES_USER: donghang_user
      POSTGRES_PASSWORD: donghang_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend-main/sql:/docker-entrypoint-initdb.d
    networks:
      - donghang-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U donghang_user -d donghang_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node.js 백엔드 API 서버
  backend:
    build:
      context: ./backend-main
      dockerfile: Dockerfile
    container_name: donghang-backend
    environment:
      NODE_ENV: development
      PORT: 9090
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: donghang_db
      DB_USERNAME: donghang_user
      DB_PASSWORD: donghang_password
      DATABASE_URL: postgresql://donghang_user:donghang_password@postgres:5432/donghang_db
      JWT_SECRET: your-secret-key-change-in-production
      JWT_EXPIRE: 24h
      ALLOWED_ORIGINS: http://localhost:3000,http://43.202.222.156:3000,http://localhost:3010
    ports:
      - "9090:9090"
    volumes:
      - ./backend-main:/app
      - /app/node_modules
      - ./logs:/app/logs
    networks:
      - donghang-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: npm run dev

  # Python AI 서비스
  ai-service:
    build:
      context: ./AI-main
      dockerfile: Dockerfile
    container_name: donghang-ai
    environment:
      HOST: 0.0.0.0
      PORT: 8000
      MODEL_NAME: microsoft/DialoGPT-medium
      MAX_LENGTH: 512
      TEMPERATURE: 0.7
    ports:
      - "8010:8000"
    volumes:
      - ./AI-main:/app
      - ./logs:/app/logs
    networks:
      - donghang-network
    restart: unless-stopped

  # React.js 프론트엔드 (개발용)
  frontend-dev:
    build:
      context: ./frontend-main
      dockerfile: Dockerfile.dev
    container_name: donghang-frontend-dev
    environment:
      REACT_APP_API_URL: http://localhost:9090
      REACT_APP_AI_API_URL: http://localhost:8010
      REACT_APP_PWA_NAME: 금복이
      REACT_APP_PWA_SHORT_NAME: 금복이
      WDS_SOCKET_PORT: 3010
    ports:
      - "3010:3000"
    volumes:
      - ./frontend-main:/app
      - /app/node_modules
    networks:
      - donghang-network
    depends_on:
      - backend
      - ai-service
    restart: unless-stopped
    stdin_open: true
    tty: true

  # Nginx (프로덕션용 프론트엔드)
  nginx:
    build:
      context: ./frontend-main
      dockerfile: nginx/Dockerfile
      args:
        REACT_APP_URL: http://localhost:5000
    container_name: donghang-nginx
    ports:
      - "80:80"
    networks:
      - donghang-network
    depends_on:
      - backend
      - ai-service
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local

networks:
  donghang-network:
    driver: bridge
